package com.ywhk.ckb.service.impl;import com.ywhk.ckb.common.http.response.PaginationResponse;import com.ywhk.ckb.dao.model.core.GroupEntity;import com.ywhk.ckb.dao.repository.FMelnstitutionRepository;import com.ywhk.ckb.dao.repository.GroupRepostory;import com.ywhk.ckb.service.GroupService;import com.ywhk.ckb.service.dto.group.QueryGroupListRequest;import com.ywhk.ckb.service.dto.group.QueryGroupListResponse;import com.ywhk.ckb.service.dto.group.UpdateGroupRequest;import com.ywhk.ckb.service.dto.group.UpdateGroupResponse;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.stereotype.Service;import java.util.ArrayList;import java.util.Date;import java.util.List;@Service("groupService")public class GroupServiceImpl implements GroupService {    @Autowired    private GroupRepostory groupRepostory;    @Autowired    private FMelnstitutionRepository fMelnstitutionRepository;    /**     * 查询科室列表信息     * @return     */    @Override    public PaginationResponse<QueryGroupListResponse> queryGroupList (QueryGroupListRequest request) {//        return groupRepostory.findAll();        List<QueryGroupListResponse> ret = new ArrayList<>();        Page<GroupEntity> groupEntities = groupRepostory.findAll(request.getPageRequest());        groupEntities.getContent().forEach(group -> {            QueryGroupListResponse d = new QueryGroupListResponse();            BeanUtils.copyProperties(group, d);            if (group.getMechanismID() != null) {                d.setMechanismName(fMelnstitutionRepository.findByFMeInstitutionID(group.getMechanismID()).getFName());            }            ret.add(d);        });        return new PaginationResponse<>(groupEntities, ret);    }    /**     * 查询所有科室     * @return     */    @Override    public List<GroupEntity> queryAllGroup() {        return groupRepostory.findAll();    }    /**     * 科室的修改和新增     *     * @return     */    @Override    public UpdateGroupResponse updateGruop(UpdateGroupRequest request) {        Date date = new Date();        GroupEntity groupEntity = null;        if (request.getFGROUPID() == null) {            groupEntity = new GroupEntity();            BeanUtils.copyProperties(request, groupEntity);            groupEntity.setFCreateDate(date);        } else {            groupEntity = groupRepostory.findByFGROUPID(request.getFGROUPID());            if (groupEntity == null) {                System.out.println("当前科室不存在");                return null;            } else {                BeanUtils.copyProperties(request, groupEntity);            }        }        groupEntity.setFModifyDate(date);        groupRepostory.save(groupEntity);        return new UpdateGroupResponse();    }    /**     * 科室列表删除     * @return     */    @Override    public void deletGruopEntityById(Integer id) {        groupRepostory.deleteById(id);    }    /**     * 批量删除科室     * @return     */    @Override    public void deleteInBatch(List<GroupEntity> list) {        groupRepostory.deleteInBatch(list);    }}